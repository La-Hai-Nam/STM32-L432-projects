ARM GAS  /tmp/ccVcHOhr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccVcHOhr.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccVcHOhr.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART2_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c ****        uint8_t helloworld[]="Hello World.\n\r";
 101:Core/Src/main.c ****        HAL_UART_Transmit(&huart2,helloworld,strlen(helloworld),1000);
 102:Core/Src/main.c ****        HAL_Delay(1000);
 103:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 104:Core/Src/main.c ****   }
 105:Core/Src/main.c ****   /* USER CODE END 3 */
 106:Core/Src/main.c **** }
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief System Clock Configuration
 110:Core/Src/main.c ****   * @retval None
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** void SystemClock_Config(void)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Configure LSE Drive Capability
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 121:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 126:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 129:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /tmp/ccVcHOhr.s 			page 4


 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 155:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 156:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 161:Core/Src/main.c ****   */
 162:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 163:Core/Src/main.c ****   {
 164:Core/Src/main.c ****     Error_Handler();
 165:Core/Src/main.c ****   }
 166:Core/Src/main.c ****   /** Enable MSI Auto calibration
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief USART2 Initialization Function
 173:Core/Src/main.c ****   * @param None
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 186:Core/Src/main.c ****   huart2.Instance = USART2;
 187:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 188:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 189:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 190:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 191:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 192:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 193:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 194:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 195:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 196:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
ARM GAS  /tmp/ccVcHOhr.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** }
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /**
 207:Core/Src/main.c ****   * @brief GPIO Initialization Function
 208:Core/Src/main.c ****   * @param None
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** static void MX_GPIO_Init(void)
 212:Core/Src/main.c **** {
  28              		.loc 1 212 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 213:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 213 3 view .LVU1
  42              		.loc 1 213 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 216:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 216 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 216 3 view .LVU4
  52              		.loc 1 216 3 view .LVU5
  53 0010 164B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 216 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 216 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 216 3 view .LVU8
 217:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 217 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 217 3 view .LVU10
  68              		.loc 1 217 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccVcHOhr.s 			page 6


  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 217 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 217 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 217 3 view .LVU14
 218:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 218 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 218 3 view .LVU16
  83              		.loc 1 218 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00202 		orr	r2, r2, #2
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 218 3 view .LVU18
  88 003e DB6C     		ldr	r3, [r3, #76]
  89 0040 03F00203 		and	r3, r3, #2
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 218 3 view .LVU19
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 218 3 view .LVU20
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 221 3 view .LVU21
  96 0048 094D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 0821     		movs	r1, #8
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 224:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 224 3 view .LVU22
 103              		.loc 1 224 23 is_stmt 0 view .LVU23
 104 0054 0823     		movs	r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 225:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 225 3 is_stmt 1 view .LVU24
 107              		.loc 1 225 24 is_stmt 0 view .LVU25
 108 0058 0123     		movs	r3, #1
 109 005a 0493     		str	r3, [sp, #16]
 226:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 226 3 is_stmt 1 view .LVU26
 111              		.loc 1 226 24 is_stmt 0 view .LVU27
 112 005c 0594     		str	r4, [sp, #20]
 227:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 227 3 is_stmt 1 view .LVU28
 114              		.loc 1 227 25 is_stmt 0 view .LVU29
 115 005e 0694     		str	r4, [sp, #24]
 228:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccVcHOhr.s 			page 7


 116              		.loc 1 228 3 is_stmt 1 view .LVU30
 117 0060 03A9     		add	r1, sp, #12
 118 0062 2846     		mov	r0, r5
 119 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL1:
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** }
 121              		.loc 1 230 1 is_stmt 0 view .LVU31
 122 0068 09B0     		add	sp, sp, #36
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 12
 125              		@ sp needed
 126 006a 30BD     		pop	{r4, r5, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 006c 00100240 		.word	1073876992
 131 0070 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE135:
 135              		.section	.text.Error_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	Error_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	Error_Handler:
 144              	.LFB136:
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /* USER CODE END 4 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /**
 237:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 238:Core/Src/main.c ****   * @retval None
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c **** void Error_Handler(void)
 241:Core/Src/main.c **** {
 145              		.loc 1 241 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ Volatile: function does not return.
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 242:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 243:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 244:Core/Src/main.c ****   __disable_irq();
 151              		.loc 1 244 3 view .LVU33
 152              	.LBB7:
 153              	.LBI7:
 154              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
ARM GAS  /tmp/ccVcHOhr.s 			page 8


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/ccVcHOhr.s 			page 9


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccVcHOhr.s 			page 10


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccVcHOhr.s 			page 11


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 155              		.loc 2 207 27 view .LVU34
 156              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 157              		.loc 2 209 3 view .LVU35
 158              		.syntax unified
 159              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 160 0000 72B6     		cpsid i
 161              	@ 0 "" 2
 162              		.thumb
 163              		.syntax unified
 164              	.L6:
 165              	.LBE8:
 166              	.LBE7:
 245:Core/Src/main.c ****   while (1)
 167              		.loc 1 245 3 discriminator 1 view .LVU36
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****   }
 168              		.loc 1 247 3 discriminator 1 view .LVU37
 245:Core/Src/main.c ****   while (1)
 169              		.loc 1 245 9 discriminator 1 view .LVU38
 170 0002 FEE7     		b	.L6
 171              		.cfi_endproc
 172              	.LFE136:
 174              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
ARM GAS  /tmp/ccVcHOhr.s 			page 12


 175              		.align	1
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	MX_USART2_UART_Init:
 182              	.LFB134:
 177:Core/Src/main.c **** 
 183              		.loc 1 177 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              	.LCFI3:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 186:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 192              		.loc 1 186 3 view .LVU40
 186:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 193              		.loc 1 186 19 is_stmt 0 view .LVU41
 194 0002 0B48     		ldr	r0, .L11
 195 0004 0B4B     		ldr	r3, .L11+4
 196 0006 0360     		str	r3, [r0]
 187:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 197              		.loc 1 187 3 is_stmt 1 view .LVU42
 187:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 198              		.loc 1 187 24 is_stmt 0 view .LVU43
 199 0008 4FF4E133 		mov	r3, #115200
 200 000c 4360     		str	r3, [r0, #4]
 188:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 201              		.loc 1 188 3 is_stmt 1 view .LVU44
 188:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 202              		.loc 1 188 26 is_stmt 0 view .LVU45
 203 000e 0023     		movs	r3, #0
 204 0010 8360     		str	r3, [r0, #8]
 189:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 205              		.loc 1 189 3 is_stmt 1 view .LVU46
 189:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 206              		.loc 1 189 24 is_stmt 0 view .LVU47
 207 0012 C360     		str	r3, [r0, #12]
 190:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 208              		.loc 1 190 3 is_stmt 1 view .LVU48
 190:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 209              		.loc 1 190 22 is_stmt 0 view .LVU49
 210 0014 0361     		str	r3, [r0, #16]
 191:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 211              		.loc 1 191 3 is_stmt 1 view .LVU50
 191:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 212              		.loc 1 191 20 is_stmt 0 view .LVU51
 213 0016 0C22     		movs	r2, #12
 214 0018 4261     		str	r2, [r0, #20]
 192:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 215              		.loc 1 192 3 is_stmt 1 view .LVU52
 192:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 216              		.loc 1 192 25 is_stmt 0 view .LVU53
 217 001a 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccVcHOhr.s 			page 13


 193:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 218              		.loc 1 193 3 is_stmt 1 view .LVU54
 193:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 219              		.loc 1 193 28 is_stmt 0 view .LVU55
 220 001c C361     		str	r3, [r0, #28]
 194:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 221              		.loc 1 194 3 is_stmt 1 view .LVU56
 194:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 222              		.loc 1 194 30 is_stmt 0 view .LVU57
 223 001e 0362     		str	r3, [r0, #32]
 195:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 224              		.loc 1 195 3 is_stmt 1 view .LVU58
 195:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 225              		.loc 1 195 38 is_stmt 0 view .LVU59
 226 0020 4362     		str	r3, [r0, #36]
 196:Core/Src/main.c ****   {
 227              		.loc 1 196 3 is_stmt 1 view .LVU60
 196:Core/Src/main.c ****   {
 228              		.loc 1 196 7 is_stmt 0 view .LVU61
 229 0022 FFF7FEFF 		bl	HAL_UART_Init
 230              	.LVL2:
 196:Core/Src/main.c ****   {
 231              		.loc 1 196 6 view .LVU62
 232 0026 00B9     		cbnz	r0, .L10
 204:Core/Src/main.c **** 
 233              		.loc 1 204 1 view .LVU63
 234 0028 08BD     		pop	{r3, pc}
 235              	.L10:
 198:Core/Src/main.c ****   }
 236              		.loc 1 198 5 is_stmt 1 view .LVU64
 237 002a FFF7FEFF 		bl	Error_Handler
 238              	.LVL3:
 239              	.L12:
 240 002e 00BF     		.align	2
 241              	.L11:
 242 0030 00000000 		.word	huart2
 243 0034 00440040 		.word	1073759232
 244              		.cfi_endproc
 245              	.LFE134:
 247              		.section	.text.SystemClock_Config,"ax",%progbits
 248              		.align	1
 249              		.global	SystemClock_Config
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	SystemClock_Config:
 256              	.LFB133:
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 257              		.loc 1 113 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 176
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261 0000 10B5     		push	{r4, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 4, -8
ARM GAS  /tmp/ccVcHOhr.s 			page 14


 265              		.cfi_offset 14, -4
 266 0002 ACB0     		sub	sp, sp, #176
 267              	.LCFI5:
 268              		.cfi_def_cfa_offset 184
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 269              		.loc 1 114 3 view .LVU66
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 270              		.loc 1 114 22 is_stmt 0 view .LVU67
 271 0004 4422     		movs	r2, #68
 272 0006 0021     		movs	r1, #0
 273 0008 1BA8     		add	r0, sp, #108
 274 000a FFF7FEFF 		bl	memset
 275              	.LVL4:
 115:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 276              		.loc 1 115 3 is_stmt 1 view .LVU68
 115:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 277              		.loc 1 115 22 is_stmt 0 view .LVU69
 278 000e 0024     		movs	r4, #0
 279 0010 1694     		str	r4, [sp, #88]
 280 0012 1794     		str	r4, [sp, #92]
 281 0014 1894     		str	r4, [sp, #96]
 282 0016 1994     		str	r4, [sp, #100]
 283 0018 1A94     		str	r4, [sp, #104]
 116:Core/Src/main.c **** 
 284              		.loc 1 116 3 is_stmt 1 view .LVU70
 116:Core/Src/main.c **** 
 285              		.loc 1 116 28 is_stmt 0 view .LVU71
 286 001a 5422     		movs	r2, #84
 287 001c 2146     		mov	r1, r4
 288 001e 01A8     		add	r0, sp, #4
 289 0020 FFF7FEFF 		bl	memset
 290              	.LVL5:
 120:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 291              		.loc 1 120 3 is_stmt 1 view .LVU72
 292 0024 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 293              	.LVL6:
 121:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 294              		.loc 1 121 3 view .LVU73
 295 0028 214A     		ldr	r2, .L23
 296 002a D2F89030 		ldr	r3, [r2, #144]
 297 002e 23F01803 		bic	r3, r3, #24
 298 0032 C2F89030 		str	r3, [r2, #144]
 125:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 299              		.loc 1 125 3 view .LVU74
 125:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 300              		.loc 1 125 36 is_stmt 0 view .LVU75
 301 0036 1423     		movs	r3, #20
 302 0038 1B93     		str	r3, [sp, #108]
 126:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 303              		.loc 1 126 3 is_stmt 1 view .LVU76
 126:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 304              		.loc 1 126 30 is_stmt 0 view .LVU77
 305 003a 0123     		movs	r3, #1
 306 003c 1D93     		str	r3, [sp, #116]
 127:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 307              		.loc 1 127 3 is_stmt 1 view .LVU78
 127:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
ARM GAS  /tmp/ccVcHOhr.s 			page 15


 308              		.loc 1 127 30 is_stmt 0 view .LVU79
 309 003e 2193     		str	r3, [sp, #132]
 128:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 310              		.loc 1 128 3 is_stmt 1 view .LVU80
 128:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 311              		.loc 1 128 41 is_stmt 0 view .LVU81
 312 0040 2294     		str	r4, [sp, #136]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 313              		.loc 1 129 3 is_stmt 1 view .LVU82
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 314              		.loc 1 129 35 is_stmt 0 view .LVU83
 315 0042 6022     		movs	r2, #96
 316 0044 2392     		str	r2, [sp, #140]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 317              		.loc 1 130 3 is_stmt 1 view .LVU84
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 318              		.loc 1 130 34 is_stmt 0 view .LVU85
 319 0046 0222     		movs	r2, #2
 320 0048 2592     		str	r2, [sp, #148]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 321              		.loc 1 131 3 is_stmt 1 view .LVU86
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 322              		.loc 1 131 35 is_stmt 0 view .LVU87
 323 004a 2693     		str	r3, [sp, #152]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 324              		.loc 1 132 3 is_stmt 1 view .LVU88
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 325              		.loc 1 132 30 is_stmt 0 view .LVU89
 326 004c 2793     		str	r3, [sp, #156]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 327              		.loc 1 133 3 is_stmt 1 view .LVU90
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 328              		.loc 1 133 30 is_stmt 0 view .LVU91
 329 004e 1023     		movs	r3, #16
 330 0050 2893     		str	r3, [sp, #160]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 331              		.loc 1 134 3 is_stmt 1 view .LVU92
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 332              		.loc 1 134 30 is_stmt 0 view .LVU93
 333 0052 0723     		movs	r3, #7
 334 0054 2993     		str	r3, [sp, #164]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 335              		.loc 1 135 3 is_stmt 1 view .LVU94
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 336              		.loc 1 135 30 is_stmt 0 view .LVU95
 337 0056 2A92     		str	r2, [sp, #168]
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 338              		.loc 1 136 3 is_stmt 1 view .LVU96
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 339              		.loc 1 136 30 is_stmt 0 view .LVU97
 340 0058 2B92     		str	r2, [sp, #172]
 137:Core/Src/main.c ****   {
 341              		.loc 1 137 3 is_stmt 1 view .LVU98
 137:Core/Src/main.c ****   {
 342              		.loc 1 137 7 is_stmt 0 view .LVU99
 343 005a 1BA8     		add	r0, sp, #108
 344 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /tmp/ccVcHOhr.s 			page 16


 345              	.LVL7:
 137:Core/Src/main.c ****   {
 346              		.loc 1 137 6 view .LVU100
 347 0060 E8B9     		cbnz	r0, .L19
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 348              		.loc 1 143 3 is_stmt 1 view .LVU101
 143:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 349              		.loc 1 143 31 is_stmt 0 view .LVU102
 350 0062 0F23     		movs	r3, #15
 351 0064 1693     		str	r3, [sp, #88]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 352              		.loc 1 145 3 is_stmt 1 view .LVU103
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 353              		.loc 1 145 34 is_stmt 0 view .LVU104
 354 0066 0323     		movs	r3, #3
 355 0068 1793     		str	r3, [sp, #92]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 356              		.loc 1 146 3 is_stmt 1 view .LVU105
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 357              		.loc 1 146 35 is_stmt 0 view .LVU106
 358 006a 0023     		movs	r3, #0
 359 006c 1893     		str	r3, [sp, #96]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 360              		.loc 1 147 3 is_stmt 1 view .LVU107
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 147 36 is_stmt 0 view .LVU108
 362 006e 1993     		str	r3, [sp, #100]
 148:Core/Src/main.c **** 
 363              		.loc 1 148 3 is_stmt 1 view .LVU109
 148:Core/Src/main.c **** 
 364              		.loc 1 148 36 is_stmt 0 view .LVU110
 365 0070 1A93     		str	r3, [sp, #104]
 150:Core/Src/main.c ****   {
 366              		.loc 1 150 3 is_stmt 1 view .LVU111
 150:Core/Src/main.c ****   {
 367              		.loc 1 150 7 is_stmt 0 view .LVU112
 368 0072 0121     		movs	r1, #1
 369 0074 16A8     		add	r0, sp, #88
 370 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 371              	.LVL8:
 150:Core/Src/main.c ****   {
 372              		.loc 1 150 6 view .LVU113
 373 007a 90B9     		cbnz	r0, .L20
 154:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 374              		.loc 1 154 3 is_stmt 1 view .LVU114
 154:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 375              		.loc 1 154 38 is_stmt 0 view .LVU115
 376 007c 0223     		movs	r3, #2
 377 007e 0193     		str	r3, [sp, #4]
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 378              		.loc 1 155 3 is_stmt 1 view .LVU116
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 379              		.loc 1 155 38 is_stmt 0 view .LVU117
 380 0080 0023     		movs	r3, #0
 381 0082 0A93     		str	r3, [sp, #40]
 156:Core/Src/main.c ****   {
 382              		.loc 1 156 3 is_stmt 1 view .LVU118
ARM GAS  /tmp/ccVcHOhr.s 			page 17


 156:Core/Src/main.c ****   {
 383              		.loc 1 156 7 is_stmt 0 view .LVU119
 384 0084 01A8     		add	r0, sp, #4
 385 0086 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 386              	.LVL9:
 156:Core/Src/main.c ****   {
 387              		.loc 1 156 6 view .LVU120
 388 008a 60B9     		cbnz	r0, .L21
 162:Core/Src/main.c ****   {
 389              		.loc 1 162 3 is_stmt 1 view .LVU121
 162:Core/Src/main.c ****   {
 390              		.loc 1 162 7 is_stmt 0 view .LVU122
 391 008c 4FF40070 		mov	r0, #512
 392 0090 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 393              	.LVL10:
 162:Core/Src/main.c ****   {
 394              		.loc 1 162 6 view .LVU123
 395 0094 48B9     		cbnz	r0, .L22
 168:Core/Src/main.c **** }
 396              		.loc 1 168 3 is_stmt 1 view .LVU124
 397 0096 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 398              	.LVL11:
 169:Core/Src/main.c **** 
 399              		.loc 1 169 1 is_stmt 0 view .LVU125
 400 009a 2CB0     		add	sp, sp, #176
 401              	.LCFI6:
 402              		.cfi_remember_state
 403              		.cfi_def_cfa_offset 8
 404              		@ sp needed
 405 009c 10BD     		pop	{r4, pc}
 406              	.L19:
 407              	.LCFI7:
 408              		.cfi_restore_state
 139:Core/Src/main.c ****   }
 409              		.loc 1 139 5 is_stmt 1 view .LVU126
 410 009e FFF7FEFF 		bl	Error_Handler
 411              	.LVL12:
 412              	.L20:
 152:Core/Src/main.c ****   }
 413              		.loc 1 152 5 view .LVU127
 414 00a2 FFF7FEFF 		bl	Error_Handler
 415              	.LVL13:
 416              	.L21:
 158:Core/Src/main.c ****   }
 417              		.loc 1 158 5 view .LVU128
 418 00a6 FFF7FEFF 		bl	Error_Handler
 419              	.LVL14:
 420              	.L22:
 164:Core/Src/main.c ****   }
 421              		.loc 1 164 5 view .LVU129
 422 00aa FFF7FEFF 		bl	Error_Handler
 423              	.LVL15:
 424              	.L24:
 425 00ae 00BF     		.align	2
 426              	.L23:
 427 00b0 00100240 		.word	1073876992
 428              		.cfi_endproc
ARM GAS  /tmp/ccVcHOhr.s 			page 18


 429              	.LFE133:
 431              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 432              		.align	2
 433              	.LC0:
 434 0000 48656C6C 		.ascii	"Hello World.\012\015\000"
 434      6F20576F 
 434      726C642E 
 434      0A0D00
 435              		.section	.text.main,"ax",%progbits
 436              		.align	1
 437              		.global	main
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	main:
 444              	.LFB132:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 445              		.loc 1 67 1 view -0
 446              		.cfi_startproc
 447              		@ Volatile: function does not return.
 448              		@ args = 0, pretend = 0, frame = 16
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 00B5     		push	{lr}
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              	.LCFI9:
 456              		.cfi_def_cfa_offset 24
  75:Core/Src/main.c **** 
 457              		.loc 1 75 3 view .LVU131
 458 0004 FFF7FEFF 		bl	HAL_Init
 459              	.LVL16:
  82:Core/Src/main.c **** 
 460              		.loc 1 82 3 view .LVU132
 461 0008 FFF7FEFF 		bl	SystemClock_Config
 462              	.LVL17:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 463              		.loc 1 89 3 view .LVU133
 464 000c FFF7FEFF 		bl	MX_GPIO_Init
 465              	.LVL18:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 466              		.loc 1 90 3 view .LVU134
 467 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 468              	.LVL19:
 469              	.L26:
  97:Core/Src/main.c ****   {
 470              		.loc 1 97 3 discriminator 1 view .LVU135
 471              	.LBB9:
 100:Core/Src/main.c ****        HAL_UART_Transmit(&huart2,helloworld,strlen(helloworld),1000);
 472              		.loc 1 100 8 discriminator 1 view .LVU136
 100:Core/Src/main.c ****        HAL_UART_Transmit(&huart2,helloworld,strlen(helloworld),1000);
 473              		.loc 1 100 16 is_stmt 0 discriminator 1 view .LVU137
 474 0014 0B4B     		ldr	r3, .L28
 475 0016 6C46     		mov	r4, sp
 476 0018 0FCB     		ldm	r3, {r0, r1, r2, r3}
ARM GAS  /tmp/ccVcHOhr.s 			page 19


 477 001a 07C4     		stmia	r4!, {r0, r1, r2}
 478 001c 24F8023B 		strh	r3, [r4], #2	@ movhi
 479 0020 1B0C     		lsrs	r3, r3, #16
 480 0022 2370     		strb	r3, [r4]
 101:Core/Src/main.c ****        HAL_Delay(1000);
 481              		.loc 1 101 8 is_stmt 1 discriminator 1 view .LVU138
 101:Core/Src/main.c ****        HAL_Delay(1000);
 482              		.loc 1 101 45 is_stmt 0 discriminator 1 view .LVU139
 483 0024 6846     		mov	r0, sp
 484 0026 FFF7FEFF 		bl	strlen
 485              	.LVL20:
 101:Core/Src/main.c ****        HAL_Delay(1000);
 486              		.loc 1 101 8 discriminator 1 view .LVU140
 487 002a 4FF47A73 		mov	r3, #1000
 488 002e 82B2     		uxth	r2, r0
 489 0030 6946     		mov	r1, sp
 490 0032 0548     		ldr	r0, .L28+4
 491 0034 FFF7FEFF 		bl	HAL_UART_Transmit
 492              	.LVL21:
 102:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 493              		.loc 1 102 8 is_stmt 1 discriminator 1 view .LVU141
 494 0038 4FF47A70 		mov	r0, #1000
 495 003c FFF7FEFF 		bl	HAL_Delay
 496              	.LVL22:
 497              	.LBE9:
  97:Core/Src/main.c ****   {
 498              		.loc 1 97 9 discriminator 1 view .LVU142
 499 0040 E8E7     		b	.L26
 500              	.L29:
 501 0042 00BF     		.align	2
 502              	.L28:
 503 0044 00000000 		.word	.LC0
 504 0048 00000000 		.word	huart2
 505              		.cfi_endproc
 506              	.LFE132:
 508              		.comm	huart2,128,4
 509              		.text
 510              	.Letext0:
 511              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 512              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 513              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 514              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 515              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 516              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 517              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 518              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 519              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 520              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 521              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 522              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 523              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 524              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 525              		.file 17 "<built-in>"
ARM GAS  /tmp/ccVcHOhr.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccVcHOhr.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccVcHOhr.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccVcHOhr.s:130    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccVcHOhr.s:136    .text.Error_Handler:0000000000000000 $t
     /tmp/ccVcHOhr.s:143    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccVcHOhr.s:175    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccVcHOhr.s:181    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccVcHOhr.s:242    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccVcHOhr.s:248    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccVcHOhr.s:255    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccVcHOhr.s:427    .text.SystemClock_Config:00000000000000b0 $d
     /tmp/ccVcHOhr.s:432    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccVcHOhr.s:436    .text.main:0000000000000000 $t
     /tmp/ccVcHOhr.s:443    .text.main:0000000000000000 main
     /tmp/ccVcHOhr.s:503    .text.main:0000000000000044 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
strlen
HAL_UART_Transmit
HAL_Delay
